--pairs = (Let "attach" (Lambda "n" (Lambda "l" (Match (Term.Var "l") (ConsApp "x" "xs") (Let "p" (Pair "x" "n") (Let "f" (App (App (Term.Var "attach") "n") "xs") (ConsApp "p" "f"))) (Nil) (Nil) ))) (Let "app'" (Lambda "l1" (Lambda "l2" (Match (Term.Var "l2") (ConsApp "x1" "xs1") (Let "fn" (App (App (Term.Var "app'") "l1") ("xs1")) (ConsApp "x1" "fn")) (Nil) (Term.Var "l1"))) ) (Let "pairs" (Lambda "list" (Match (Term.Var "list") (ConsApp "x2" "xs2" ) (Let "f1" (App (Term.Var "pairs") "xs2") (Let "f2" (App (App (Term.Var "attach") "x2") "xs2") (App (App (Term.Var "app'") "f1") "f2"))) (Nil) (Nil))) (Term.Var "pairs"))))
